{"version":3,"sources":["header.js","Footer.js","introduce.js","login.js","clock.js","loading.js","editor.js","main_footer.js","calendar.js","Notification.js","Mypage.js","App.js","reportWebVitals.js","index.js"],"names":["connect","state","reducer2","state2","reducer3","state3","reducer4","props","className","to","src","alt","Nobell","onClick","dispatch","type","Footer","Introduce","history","useHistory","class","push","reducer6","useEffect","form","document","querySelector","input","gretting","log","USER_ID","handleSubmit","event","preventDefault","text","currentValue","value","paintGretting","localStorage","setItem","innerText","classList","add","loadName","currentUser","getItem","addEventListener","placeholder","Clock","useState","moment","time","setTime","setInterval","format","Loading","editorSwich","reducer","write","setwrite","writeH","setwriteH","writeM","setwriteM","onChange","e","target","autoComplete","maxLength","min","max","disabled","arrayWrite","unshift","arrayH","arrayM","logicFac","payload","loadedTodos","saveData","JSON","parse","addToggle","DateWrap","Calendar","Time","Text","reducer5","defaultTime","map","a","i","year","mon","date","hour","checkText","MyPage","changeTitle","innerHTML","removeItem","LoadingState","Loading변경","plusDay","setplusDay","parcent","setparcent","setAddToggle","resets","setresets","parsedTodos","parcentName","loadedParcent","countDownDate","Date","setHours","timer","now","getTime","distance","Math","floor","clearInterval","setTimeout","start","getFullYear","diff","counter","exact","path","update","window","location","reload","id","nowTime","DateFac","getMonth","getDate","getHours","getMinutes","payload2","payload3","finded","querySelectorAll","todayFind","todayFind2","toggle","NotiToggle","Mypage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","defaultState","toggles","NavToggle","checkTime","dateSave","checktxt","store","createStore","combineReducers","action","copy","copy2","console","stringify","action2","copy3","copy4","action3","copy5","action4","copy6","copy8","action5","copy7","action6","copy9","ReactDOM","render","StrictMode","getElementById"],"mappings":"yYA4BeA,mBARf,SAAkBC,GAChB,MAAO,CACHA,MAAQA,EAAMC,SACdC,OAASF,EAAMG,SACfC,OAASJ,EAAMK,YAINN,EAxBf,SAAgBO,GACZ,OACI,sBAAKC,UAAU,eAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAKD,UAAU,aAAxB,SAAqC,qBAAKE,IAAI,yBAAyBC,IAAI,UAC7E,4BAAG,cAAC,IAAD,CAAMF,GAAG,IAAT,gDAE0B,IAA3BF,EAAMF,OAAO,GAAGO,OACd,qBAAKF,IAAI,gBAAgBC,IAAI,OAAOE,QAAS,WAC7CN,EAAMO,SAAS,CAACC,KAAK,gCAErB,qBAAKL,IAAI,mBAAmBC,IAAI,OAAOH,UAAU,eCF3CQ,MATlB,WACI,OACE,mCACA,2IACA,0ECmBSC,MArBf,SAAmBV,GACjB,IAAIW,EAAUC,cACZ,OACI,8BACI,sBAAKX,UAAU,cAAf,UACA,sBAAKA,UAAU,YAAf,UACE,qBAAKE,IAAI,qBAAqBC,IAAI,qBAAMH,UAAU,aAClD,mBAAGA,UAAU,QAAb,6CACA,oBAAGA,UAAU,UAAb,gKACC,uBADD,4JAGC,mBAAGY,MAAM,QAAQP,QAAS,WACxBK,EAAQG,KAAK,MADf,6BAIH,cAAC,EAAD,U,MCsDGrB,mBANf,SAAeC,GACb,MAAO,CACHA,MAAQA,EAAMqB,YAILtB,EAnEf,SAAiBO,GACf,IAAIW,EAAUC,cA+CZ,OA9CDI,qBAAU,WACL,IAAMC,EAAOC,SAASC,cAAc,YACpCC,EAAQH,EAAKE,cAAc,SAC3BE,EAAWH,SAASC,cAAc,iBAClCG,EAAMJ,SAASC,cAAc,kBAGvBI,GAFAD,EAAIH,cAAc,QAER,eAUhB,SAASK,EAAaC,GACpBA,EAAMC,iBACN,IAVgBC,EAUVC,EAAeR,EAAMS,MAC3BC,EAAcF,GAXED,EAYPC,EAXTG,aAAaC,QAAQT,EAASI,GAchC,SAASG,EAAcH,GACrBN,EAASY,UAAT,UAAwBN,EAAxB,0CACAV,EAAKiB,UAAUC,IAAI,QACnBb,EAAIY,UAAUC,IAAI,UAClBxB,EAAQG,KAAK,KACbd,EAAMO,SAAS,CAACC,KAAK,mCAGvB,SAAS4B,IACL,IAAIC,EAAcN,aAAaO,QAAQf,GACf,OAAhBc,EApBVpB,EAAKsB,iBAAiB,SAASf,GAuBrBM,EAAcO,GAILD,OAMrB,sBAAKnC,UAAU,cAAf,UACC,qBAAKA,UAAU,gBAAf,SACA,oBAAIY,MAAM,yBAAV,iBAEA,sBAAMA,MAAM,eAAZ,SACC,uBAAOL,KAAK,OAAOgC,YAAY,mFAEhC,cAAC,EAAD,U,iBC3CMC,MAlBf,WAAiB,IAAD,EACQC,mBAASC,OADjB,mBACPC,EADO,KACFC,EADE,KAEZ,OACI,sBAAK5C,UAAU,YAAf,UAEIe,qBAAU,WACN8B,aAAY,WAChBD,EAAQF,SACN,OAEA,IAEF,qBAAK1C,UAAU,OAAf,SAAuB2C,EAAKG,OAAO,WAClC,qBAAK5C,IAAI,sBAAsBC,IAAI,mBCFjC4C,MAXf,WACI,OACI,sBAAK/C,UAAU,cAAf,UACG,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,QAAb,+CAEC,cAAC,EAAD,Q,QCwDER,mBANf,SAAiBC,GACd,MAAO,CACHuD,YAAcvD,EAAMwD,WAIZzD,EA9Df,SAAgBO,GAAQ,IAAD,EAEG0C,mBAAS,IAFZ,mBAEfS,EAFe,KAETC,EAFS,OAGKV,mBAAS,IAHd,mBAGfW,EAHe,KAGRC,EAHQ,OAIKZ,mBAAS,IAJd,mBAIfa,EAJe,KAIRC,EAJQ,OAKOd,mBAAS,GALhB,mBAOnB,OAPmB,UAQhB,sBAAKzC,UAAU,SAAf,UACQ,gEACA,uBAAOA,UAAU,YAAYuC,YAAY,gEAAeiB,SAAU,SAACC,GACjEN,EAASM,EAAEC,OAAO9B,UAElB,sBAAK5B,UAAU,OAAf,UACA,mBAAGA,UAAU,MAAb,0BACA,uBAAMA,UAAU,YAAY2D,aAAa,MAAzC,UACA,uBAAO3D,UAAU,gBAAgBuC,YAAY,KAAKqB,UAAU,IAAIrD,KAAK,SAASsD,IAAI,KAAKC,IAAI,KAAIN,SAAU,SAACC,GAC1GJ,EAAUI,EAAEC,OAAO9B,OACnB2B,EAAU,SAEV,uBAAOvD,UAAU,kBAAkBuC,YAAY,KAAMhC,KAAK,SAASqD,UAAU,IAAIC,IAAI,KAAKC,IAAI,KAAIN,SAAU,SAACC,GAC7GF,EAAUE,EAAEC,OAAO9B,UAEnB,uBAAO5B,UAAU,WAAWuC,YAAY,KAAMhC,KAAK,SAASqD,UAAU,IAAIC,IAAI,KAAKC,IAAI,KAAKC,UAAQ,UAGtG,wBAAQ1D,QAAS,WACf,IAAI2D,EAAU,YAAOd,GACrBc,EAAWC,QAAQf,GACnBC,EAASa,GAET,IAAIE,EAAM,YAAOd,GACjBc,EAAOD,QAAQb,GACfC,EAAUa,GAEV,IAAIC,EAAM,YAAOb,GACjBa,EAAOF,QAAQX,GACfC,EAAUY,GAKV,IAAIC,EAAW,CACblB,MAAQA,EACRE,OAASA,EACTE,OAASA,GAGXvD,EAAMO,SAAS,CAACC,KAAK,iCAAQ8D,QAAQD,KAtBvC,4C,QCiBA5E,mBANhB,SAAiBC,GACb,MAAO,CACHA,MAAQA,EAAMwD,WAINzD,EAtChB,SAAoBO,GAClB,IAAMuE,EAAcxC,aAAaO,QAAQtC,EAAMN,MAAM,GAAG8E,UAGpD7D,GAFgB8D,KAAKC,MAAMH,GAEjB3D,eACZ,OACI,yBAAQX,UAAU,aAAlB,WAEwB,IAApBD,EAAM2E,UACJ,wBAAQrE,QAAS,WACjBN,EAAMO,SAAS,CAACC,KAAK,oCADrB,SAGF,qBAAKL,IAAI,gBAAgBC,IAAI,UAE3B,KAEF,qBAAKH,UAAU,aAAf,SACA,eAAC,IAAD,CAAMC,GAAG,IAAT,UACE,qBAAKC,IAAI,gBAAgBC,IAAI,SAC7B,4CAGF,sBAAKH,UAAU,iBAAiBK,QAAS,WACvCK,EAAQG,KAAK,cADf,UAGA,qBAAKX,IAAI,oBAAoBC,IAAI,aAC/B,4D,MCDd,SAASwE,IACL,OACI,8BACA,sBAAK3E,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,oFACA,4FAEJ,qBAAKA,UAAU,WAAf,SACK,qBAAKE,IAAI,wBAAwBC,IAAI,8BAOrCyE,MAtCjB,SAAkB7E,GACd,OACI,gCACA,sBAAKC,UAAU,gBAAf,UACC,mCACI,cAAC,EAAD,IACD,cAAC,EAAD,OAEH,cAAC,IAAD,IACD,0BAASA,UAAU,iBAAnB,UACI,qBAAKA,UAAU,aAAf,SACA,qBAAKA,UAAU,aAAf,wCAEA,cAAC2E,EAAD,IACA,cAACA,EAAD,UAGJ,cAAC,EAAD,Q,MC0BSnF,mBARjB,SAAkBC,GACd,MAAO,CACHA,MAAQA,EAAMC,SACdmF,KAAOpF,EAAMG,SACbkF,KAAOrF,EAAMsF,YAIJvF,EAjDjB,SAAsBO,GAClB,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,UACf,kCACI,sBAAKA,UAAU,eAAf,UACI,mBAAGA,UAAU,aAAb,gCACA,qBAAKE,IAAI,iBAAiBG,QAAS,WAC/BN,EAAMO,SAAS,CAACC,KAAK,6BACrBR,EAAMO,SAAS,CAACC,KAAK,mCAG7B,oBAAIP,UAAU,YAAd,SAEMD,EAAM8E,KAAK,GAAGG,YAAYC,KAAI,SAAUC,EAAEC,GACtC,OAAO,+BACH,qBAAKjF,IAAI,uBACT,sBAAKF,UAAU,cAAf,UACA,mBAAGA,UAAU,UAAb,mBAEWD,EAAM8E,KAAK,GAAGG,YAAYG,GAAGC,KAFxC,YAEgDrF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGE,IAAM,GAAM,IAAMtF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGE,IAAMtF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGE,IAF/J,YAEsKtF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGG,KAAO,GAAM,IAAMvF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGG,KAAOvF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGG,KAFvR,mDAGUvF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGI,KAAO,GAAM,IAAMxF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGI,KAAOxF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGI,KAH3H,YAGmIxF,EAAM8E,KAAK,GAAGG,YAAYG,GAAGtB,IAAM,GAAM,IAAM9D,EAAM8E,KAAK,GAAGG,YAAYG,GAAGtB,IAAM9D,EAAM8E,KAAK,GAAGG,YAAYG,GAAGtB,IAHlP,SAOA,mBAAG7D,UAAU,WAAb,SAEQD,EAAM+E,KAAK,GAAGU,UAAUL,yB,MCkC7CM,MAvDjB,SAAgB1F,GACZ,IAAIW,EAAUC,cACd,OACI,gCAEII,qBAAU,WACN,IAAM2E,EAAczE,SAASC,cAAc,QACzBD,SAASC,cAAc,YACzCwE,EAAYC,UAAU,oCAG9B,sBAAK3F,UAAU,cAAf,UACC,mCACI,cAAC,EAAD,IACD,cAAC,EAAD,OAEH,0BAASA,UAAU,YAAnB,UACI,sBAAKA,UAAU,eAAf,UACA,qBAAIA,UAAU,SAAd,UACA,4BAAID,EAAMqC,cADV,kBAGA,mBAAGpC,UAAU,SAAb,qEAGA,8CAEA,wBAAQA,UAAU,cAAlB,SACC,qBAAKE,IAAI,8BAGd,yBAASF,UAAU,YAAnB,SACG,qBAAIA,UAAU,WAAd,UACC,0DACI,qBAAKE,IAAI,yBAEb,oDACG,qBAAKA,IAAI,yBAEZ,6BACI,eAAC,IAAD,CAAMD,GAAG,aAAT,2CACA,qBAAKC,IAAI,2BAEb,qBAAIG,QAAS,WACTyB,aAAa8D,WAAW,eACxBlF,EAAQG,KAAK,WAFjB,2CAIG,qBAAKX,IAAI,iCAIjB,cAAC,EAAD,QCkPOV,mBAXf,SAAmBC,GACjB,MAAM,CACJwD,QAAUxD,EAAMwD,QAChBvD,SAAWD,EAAMC,SACjBE,SAAWH,EAAMG,SACjBE,SAAWL,EAAMK,SACjBiF,SAAWtF,EAAMsF,SACjBjE,SAAWrB,EAAMqB,YAINtB,EAzRf,SAAaO,GAAQ,IAAD,EACa0C,oBAAS,GADtB,mBACboD,EADa,KACAC,EADA,KAId1D,EAAcN,aAAaO,QADf,eAHE,EAQSI,mBAAS,GARlB,mBAQbsD,EARa,KAQLC,EARK,OAUSvD,mBAAS,GAVlB,mBAUbwD,EAVa,KAULC,EAVK,OAYazD,oBAAS,GAZtB,mBAYbiC,EAZa,KAYHyB,EAZG,OAcO1D,oBAAS,GAdhB,mBAcb2D,EAda,KAcNC,EAdM,KAgBZ/B,EAAcxC,aAAaO,QAAQtC,EAAMkD,QAAQ,GAAGsB,UACpD+B,EAAc9B,KAAKC,MAAMH,GAEzBiC,EAAc,UAEdC,GAAiB1E,aAAaO,QAAQkE,GAGxCE,EAAgB,IAAIC,KACxBD,EAAcE,SAAS,GAAG,EAAE,EAAE,GAE9B,IAAIC,EAAQ/D,aAAY,WAEtB,IAAIgE,GAAM,IAAIH,MAAOI,UAEjBC,EAAWN,EAAgBI,EAGnBG,KAAKC,MAAOF,EAAQ,MAAT,MACTC,KAAKC,MAAOF,EAAQ,KAAT,KACXC,KAAKC,MAAOF,EAAQ,IAAkB,KAGhDA,EAAW,IACbG,cAAcN,GACdV,EAAW,GACXpE,aAAa8D,WAAW,QACxB9D,aAAa8D,WAAW,cAEzB,KAEH,OACE,sBAAK5F,UAAU,MAAf,UAGIe,qBAAU,WACRoG,YAAW,WACTrB,GAAU,GACV,IAAIe,EAAM,IAAIH,KAEVU,EAAQ,IAAIV,KAAKG,EAAIQ,cAAc,EAAE,GAErCC,EAAQT,EAAMO,EAIdG,EAAUP,KAAKC,MAAMK,EAFZ,OAObtB,EAFeuB,EAAS,MAIvB,OACH,IAIFxG,qBAAU,WACR,IAAI6F,EAAQ/D,aAAY,WAEtB,IAAIgE,GAAM,IAAIH,MAAOI,UAEjBC,EAAWN,EAAgBI,EAGnBG,KAAKC,MAAOF,EAAQ,MAAT,MACTC,KAAKC,MAAOF,EAAQ,KAAT,KACXC,KAAKC,MAAOF,EAAQ,IAAkB,KAEnC,IAAbA,IACFG,cAAcN,GACdV,EAAW,GACXpE,aAAa8D,WAAW,QACxB9D,aAAa8D,WAAW,cAEzB,OACH,IAIJ7E,qBAAU,WACR8B,aAAY,WACV,IAAIgE,EAAM,IAAIH,KAEVU,EAAQ,IAAIV,KAAKG,EAAIQ,cAAc,EAAE,GAErCC,EAAQT,EAAMO,EAIdG,EAAUP,KAAKC,MAAMK,EAFZ,OAObtB,EAFeuB,EAAS,MAGxB,QACF,IAIFxG,qBAAU,WAENmF,EADe,MAAjBM,EACa,EACAA,KACb,IAIJ,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAlB,UAEoB,IAAjB5B,IAAuD,IAA7B9F,EAAMe,SAAS,GAAG4G,OAC1C,cAAC,EAAD,IACgB,OAAhBtF,EACA,cAAC,EAAD,IACA,gCAEF,sBAAKpC,UAAU,OAAf,UACG,yBAAQA,UAAU,cAAlB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,WAA7B,SAAwC,qBAAKE,IAAI,gBAAgBC,IAAI,UACrE,cAAC,EAAD,OAEF,0BAASH,UAAU,YAAnB,UACE,sBAAKA,UAAU,cAAf,UACA,mBAAGA,UAAU,QAAb,uCACA,oBAAGA,UAAU,UAAb,UAEMiG,EAAU,IACRC,EAAW,KACXD,EAJR,OAMA,mBAAGjG,UAAU,UAAb,4FAGc,IAAZiG,EACE,qBAAK/F,IAAI,iBAAiBC,IAAI,iBAClB,KAAZ8F,EACA,qBAAK/F,IAAI,eAAeC,IAAI,qBAAMH,UAAU,QAChC,KAAZiG,EACA,qBAAK/F,IAAI,cAAcC,IAAI,qBAAMH,UAAU,QAC/B,KAAZiG,EACA,qBAAK/F,IAAI,cAAcC,IAAI,qBAAMH,UAAU,QAE3C,qBAAKE,IAAI,eAAeC,IAAI,qBAAMH,UAAU,QAGhD,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBoC,IACvB,oBAAGpC,UAAU,iBAAb,0BAAkC+F,EAAlC,mFAIJ,yBAAS/F,UAAU,YAAnB,SACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,WAAf,UACE,gEAEY,IAAXoG,EACG,oBAAGpG,UAAU,QAAQK,QAAS,WAChC8F,GAAa,GACbE,GAAU,IAFR,qCAIH,qBAAKnG,IAAI,gBAAgBC,IAAI,0BAC1B,mBAAGH,UAAU,QAAQK,QAAS,WAC/ByB,aAAa8D,WAAW,QACxBS,GAAU,GACVF,GAAa,GACbrE,aAAa8D,WAAW,WACxB+B,OAAOC,SAASC,UALf,+CAUY,OAAhBvD,EACEgC,EAAYrB,KAAI,SAAUC,EAAEC,GAC5B,OAAO,sBAAKnF,UAAU,OAAf,UACD,oBAAGA,UAAU,aAAb,UAA2BsG,EAAYnB,GAAG/B,OAA1C,IAAmDkD,EAAYnB,GAAG7B,UAChE,mBAAGtD,UAAU,YAAb,SAA0BsG,EAAYnB,GAAGjC,QAC7C,wBAAQ4E,GAAK3C,EAAG9E,QAAS,WACnB,IAAI0H,EAAU,IAAIrB,KAQdsB,EAAU,CACZ5C,KAPS2C,EAAQV,cAQjBhC,IAPS0C,EAAQE,WAAW,EAQ5B3C,KAPSyC,EAAQG,UAQjB3C,KAPSwC,EAAQI,WAQjBtE,IAPQkE,EAAQK,cAWpBlC,EADFD,GAAW,IACEA,EACAA,EAAQ,IACrBnE,aAAaC,QAAQwE,EAAYN,EAAQ,IACzClG,EAAMO,SAAS,CAACC,KAAK,2BAAO8H,SAAUL,IACtCjI,EAAMO,SAAS,CAACC,KAAK,6BACrBR,EAAMO,SAAS,CAACC,KAAK,uCAAS+H,SAAShC,EAAYnB,GAAGjC,QAEtD,IAAMqF,EAAStH,SAASuH,iBAAiB,2BACnCC,EAAYxH,SAASuH,iBAAiB,gCACtCE,EAAazH,SAASuH,iBAAiB,+BAC7CD,EAAOpD,GAAGlD,UAAUC,IAAI,OACxBuG,EAAUtD,GAAGlD,UAAUC,IAAI,UAC3BwG,EAAWvD,GAAGlD,UAAUC,IAAI,WA9B9B,SAgCI,qBAAKhC,IAAI,wBAAwBC,IAAI,cAnCXgF,MAuClC,WAK0B,IAA5BpF,EAAMkD,QAAQ,GAAG0F,OACf,cAAC,EAAD,IACA,QAGP,cAAC,EAAD,CAAYjE,UAAWA,KAEY,IAAjC3E,EAAML,SAAS,GAAGkJ,aAAoD,IAA7B7I,EAAMD,SAAS,GAAGM,OACzD,cAAC,EAAD,CAAckE,YAAaA,EAAagC,YAAaA,IACpD,UAKZ,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACA,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACA,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACA,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACA,cAACoB,EAAD,CAAQzG,YAAaA,YCjRZ0G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCEVQ,EAAW,CAAC,CACdZ,QAAS,EACTpE,SAAW,OACXiF,aAAe,KAGbC,EAAS,CAAC,CACZb,YAAa,EACbc,WAAY,EACZtJ,QAAS,EACTsH,QAAS,IAGPiC,EAAW,CAAC,CACd3E,YAAc,GACdQ,UAAW,GACXoE,SAAW,WACXC,SAAU,aAoFZ,IAAIC,EAAQC,YAAYC,YAAgB,CAAC/G,QA5EzC,WAA4C,IAA3BxD,EAA0B,uDAAlB8J,EAAUU,EAAQ,uCACzC,GAAmB,mCAAhBA,EAAO1J,KAAiB,CACzB,IAAI2J,EAAI,UAAOX,GAEf,OADAW,EAAK,GAAGvB,QAAS,EACVuB,EACF,GAAoB,mCAAhBD,EAAO1J,KAAkB,CAClC,IAAI4J,EAAK,UAAOZ,GAKhB,OAJAY,EAAM,GAAGxB,QAAS,EAClBwB,EAAM,GAAGX,aAAa3I,KAAKoJ,EAAO5F,SAClC+F,QAAQ/I,IAAI8I,GACZrI,aAAaC,QAAQoI,EAAM,GAAG5F,SAASC,KAAK6F,UAAUF,EAAM,GAAGX,eACxDW,EAEP,OAAO1K,GA+DsCC,SA3DjD,WAA6C,IAA3BD,EAA0B,uDAAlBgK,EAASa,EAAS,uCAC1C,GAAmB,6BAAhBA,EAAQ/J,KAAe,CACxB,IAAIgK,EAAK,UAAOd,GAEhB,OADAc,EAAM,GAAG3B,YAAa,EACf2B,EACF,GAAqB,6BAAjBD,EAAQ/J,KAAiB,CAClC,IAAIiK,EAAK,UAAOf,GAEhB,OADAe,EAAM,GAAG5B,YAAa,EACf4B,EAEP,OAAO/K,GAiD+CG,SA7C1D,WAA+C,IAA7BH,EAA4B,uDAApBkK,EAAWc,EAAS,uCAC5C,GAAoB,6BAAjBA,EAAQlK,KAAgB,CACzB,IAAImK,EAAK,UAAOf,GAEhB,OADAe,EAAM,GAAG1F,YAAYnE,KAAK4J,EAAQpC,UAC3BqC,EAEP,OAAOjL,GAuCwDK,SAnCnE,WAA6C,IAA3BL,EAA0B,uDAAlBgK,EAASkB,EAAS,uCAC1C,GAAoB,6BAAjBA,EAAQpK,KAAgB,CACzB,IAAIqK,EAAK,UAAOnB,GAEhB,OADAmB,EAAM,GAAGxK,QAAS,EACXwK,EACF,GAAkB,6BAAfD,EAAQpK,KAAe,CAC/B,IAAIsK,EAAK,UAAOpB,GAEhB,OADAoB,EAAM,GAAGzK,QAAS,EACXyK,EAEP,OAAOpL,GAyBiEsF,SArB5E,WAA+C,IAA7BtF,EAA4B,uDAApBkK,EAAWmB,EAAS,uCAC5C,GAAoB,yCAAjBA,EAAQvK,KAAkB,CAC3B,IAAIwK,EAAK,UAAOpB,GAGhB,OAFAoB,EAAM,GAAGvF,UAAU3E,KAAKiK,EAAQxC,UAChC8B,QAAQ/I,IAAI0J,GACLA,EAEP,OAAOtL,GAc0EqB,SAVrF,WAA6C,IAA3BrB,EAA0B,uDAAlBgK,EAASuB,EAAS,uCAC1C,GAAoB,mCAAjBA,EAAQzK,KAAiB,CAC1B,IAAI0K,EAAK,UAAOxB,GAEhB,OADAwB,EAAM,GAAGvD,QAAS,EACXuD,EAEP,OAAOxL,MAMXyL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAUtB,MAAOA,EAAjB,SACA,cAAC,EAAD,UAIF7I,SAASoK,eAAe,SAM1BvC,M","file":"static/js/main.85ba3e68.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Header(props) {\r\n    return(\r\n        <div className=\"title_header\">\r\n          <Link to=\"/\"  className=\"header_nav\"><img src=\"./img/locate_arrow.svg\" alt=\"nav\"></img></Link>\r\n        <p><Link to=\"/\">완벽한 하루</Link></p>\r\n        {\r\n          props.state3[0].Nobell === true\r\n          ? <img src=\"/img/bell.svg\" alt=\"bell\" onClick={()=>{\r\n            props.dispatch({type:\"알림열기\"})\r\n          }}></img>\r\n          : <img src=\"/img/no_bell.svg\" alt=\"bell\" className=\"down\"></img> \r\n        }\r\n      </div>   \r\n    )\r\n}\r\n\r\nfunction redux공장2(state) {\r\n  return {\r\n      state : state.reducer2,\r\n      state2 : state.reducer3,\r\n      state3 : state.reducer4,\r\n  }\r\n}\r\n\r\nexport default connect(redux공장2)(Header);","import React from 'react';\r\nimport './reset.css'\r\n\r\nfunction Footer(){\r\n    return(\r\n      <footer>\r\n      <p>오늘도 완벽한 하루를 보내시길 바랄게요</p>\r\n      <p>Copyright 2021 ⓒ jioo-designer  </p>\r\n    </footer>\r\n    )\r\n  }\r\n\r\n  export  default Footer","import React, { useState,useEffect } from 'react';\r\nimport './loading.scss'\r\nimport './reset.css'\r\nimport Footer from \"./Footer\"\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Introduce(props) {\r\n  let history = useHistory()\r\n    return(\r\n        <div>\r\n            <div className=\"center_wrap\">\r\n            <div className=\"logo_wrap\">\r\n              <img src=\"/img/introduce.svg\" alt=\"이미지\" className=\"introImg\"></img>\r\n              <p className=\"title\">제작자 인사</p>\r\n              <p className=\"caption\">잠들기 전 오늘 정말 한게 없다고 느껴지신 적 없으신가요?\r\n               <br></br>\r\n               일정을 체크하고 끝냄으로 써 하루를 완벽하게 끝내보세요</p>\r\n               <p class=\"enter\" onClick={()=>{\r\n                 history.push(\"/\")\r\n               }}>확인</p>\r\n            </div>\r\n            <Footer></Footer>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduce;","import React, {useEffect, useState} from 'react';\r\nimport './reset.css'\r\nimport './login.scss'\r\nimport Footer from \"./Footer\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction AskForm(props){\r\n  let history = useHistory()\r\n   useEffect(()=>{\r\n        const form = document.querySelector(\".js-form\"),\r\n        input = form.querySelector(\"input\"),\r\n        gretting = document.querySelector(\".js-grettings\"),\r\n        log = document.querySelector(\".gretting_wrap\"),\r\n        out = log.querySelector(\".out\")\r\n\r\n        const USER_ID = \"currentUser\"\r\n    \r\n        function saveName(text) {\r\n          localStorage.setItem(USER_ID, text);\r\n        }\r\n    \r\n        function askForName() {\r\n          form.addEventListener(\"submit\",handleSubmit)\r\n        }\r\n    \r\n        function handleSubmit(event) {\r\n          event.preventDefault();\r\n          const currentValue = input.value;\r\n          paintGretting(currentValue);\r\n          saveName(currentValue);\r\n        }\r\n    \r\n        function paintGretting(text) {\r\n          gretting.innerText = `${text} 님 반갑습니다`\r\n          form.classList.add(\"none\")\r\n          log.classList.add(\"height\")\r\n          history.push('/')\r\n          props.dispatch({type:\"로그인성공\"})\r\n        }\r\n    \r\n        function loadName() {\r\n            let currentUser = localStorage.getItem(USER_ID);\r\n                if (currentUser === null) {\r\n                    askForName();\r\n                } else {\r\n                    paintGretting(currentUser);\r\n                }\r\n        }\r\n    \r\n        const init  = () =>{ loadName() }\r\n        \r\n        init();\r\n\r\n        }) \r\n    return(\r\n        <div className=\"center_wrap\">\r\n         <div className=\"gretting_wrap\">\r\n         <h4 class=\"js-grettings grettings\"> </h4>\r\n         </div>\r\n         <form class=\"js-form form\">\r\n          <input type=\"text\" placeholder=\"사용 할 닉네임을 적어주세요.\"/>\r\n         </form>\r\n         <Footer></Footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction 로그인공장(state) {\r\n  return {\r\n      state : state.reducer6\r\n  }\r\n}\r\n\r\nexport default connect(로그인공장)(AskForm);","import React, {useState,useEffect} from 'react';\r\nimport moment from 'moment';\r\nfunction Clock(){\r\n    let [time,setTime] =useState(moment());\r\n    return(\r\n        <div className=\"header_in\">\r\n        {\r\n            useEffect(()=>{\r\n                setInterval(() => {\r\n            setTime(moment())\r\n            },1000);\r\n            // 시간 업데이트\r\n            },[])\r\n    }\r\n            <div className=\"time\">{time.format('HH-mm')}</div>\r\n             <img src=\"/img/phone_base.svg\" alt=\"phone_Base\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock;","import React  from 'react';\r\nimport Footer from \"./Footer\"\r\nfunction Loading() {\r\n    return(\r\n        <div className=\"center_wrap\">\r\n           <div className=\"logo_wrap\">\r\n             <p className=\"title\">완벽한 하루</p>\r\n              </div>\r\n              <Footer></Footer>\r\n              </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n function Editor(props) {\r\n\r\n    let [write,setwrite] = useState([]);\r\n    let [writeH,setwriteH] = useState([]);\r\n    let [writeM,setwriteM] = useState([]);\r\n    let [countId,setCountID] = useState(0);\r\n\r\n     return(\r\n        <div className=\"editor\">\r\n                <b>오늘의 목표</b>\r\n                <input className=\"text_area\" placeholder=\"스케줄을 입력해주세요\"  onChange={(e)=>{\r\n                  setwrite(e.target.value)\r\n                }}></input>\r\n                  <div className=\"date\">\r\n                  <p className=\"day\">시간</p>\r\n                  <form className=\"time_wrap\" autoComplete=\"off\">\r\n                  <input className=\"time_txt hour\" placeholder=\"00\" maxLength=\"2\" type=\"number\" min=\"00\" max=\"24\"onChange={(e)=>{\r\n                  setwriteH(e.target.value)\r\n                  setwriteM(\"00\")\r\n                }}></input>\r\n                  <input className=\"time_txt minute\" placeholder=\"00\"  type=\"number\" maxLength=\"2\" min=\"00\" max=\"60\"onChange={(e)=>{\r\n                  setwriteM(e.target.value)\r\n                }}></input>\r\n                  <input className=\"time_txt\" placeholder=\"00\"  type=\"number\" maxLength=\"2\" min=\"00\" max=\"60\" disabled></input>\r\n                  </form>\r\n                  </div>\r\n                <button onClick={()=>{\r\n                  let arrayWrite = [...write]\r\n                  arrayWrite.unshift(write)\r\n                  setwrite(arrayWrite)\r\n\r\n                  let arrayH = [...writeH]\r\n                  arrayH.unshift(writeH)\r\n                  setwriteH(arrayH)\r\n\r\n                  let arrayM = [...writeM]\r\n                  arrayM.unshift(writeM)\r\n                  setwriteM(arrayM)\r\n                  // console.log(write)\r\n                  // console.log(writeH)\r\n                  // console.log(writeM)\r\n\r\n                  let logicFac = {\r\n                    write : write,\r\n                    writeH : writeH,\r\n                    writeM : writeM\r\n                  }\r\n\r\n                  props.dispatch({type:\"에디터닫기\",payload:logicFac })\r\n                }}>등록하기</button>\r\n              </div>\r\n     )\r\n }\r\n\r\n\r\n\r\n function redux공장(state) {\r\n    return {\r\n        editorSwich : state.reducer\r\n    }\r\n  }\r\n\r\n export default connect(redux공장)(Editor);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './reset.css';\r\nimport './App.scss';\r\n\r\nfunction MainFooter(props) {\r\n  const loadedTodos = localStorage.getItem(props.state[0].saveData)\r\n  const parsedTodos = JSON.parse(loadedTodos);\r\n\r\n  let history = useHistory();\r\n    return(\r\n        <footer className=\"footer_bar\">\r\n          {\r\n            props.addToggle === false\r\n            ? <button onClick={()=>{\r\n              props.dispatch({type:\"에디터열기\"})\r\n            }}>\r\n            <img src=\"/img/adds.svg\" alt=\"add\"></img>\r\n            </button>\r\n            : null\r\n          }\r\n            <div className=\"home f_con\">\r\n            <Link to=\"/\">\r\n              <img src=\"/img/home.svg\" alt=\"home\"></img>\r\n              <p>홈</p>\r\n              </Link>\r\n            </div>\r\n            <div className=\"calendar f_con\" onClick={()=>{\r\n              history.push('/calendar')\r\n            }}>\r\n            <img src=\"/img/calendar.svg\" alt=\"calendar\"></img>\r\n              <p>캘린더</p>\r\n            </div>\r\n          </footer>\r\n    )\r\n}\r\n\r\nfunction redux공장(state) {\r\n    return {\r\n        state : state.reducer\r\n    }\r\n  }\r\n\r\n export default connect(redux공장)(MainFooter);","import React, { useEffect } from 'react';\r\nimport { CalendarComponent } from '@syncfusion/ej2-react-calendars';\r\nimport Header from './header'\r\nimport MainFooter from './main_footer'\r\nimport Clock from './clock'\r\nimport {connect} from 'react-redux';\r\n\r\nimport './reset.css';\r\nimport './calendar.scss'\r\n\r\nfunction Calendar(props) {\r\n    return(\r\n        <div>\r\n        <div className=\"wrap calendar\">\r\n         <header>\r\n             <Clock></Clock>\r\n            <Header></Header>\r\n         </header>\r\n         <CalendarComponent></CalendarComponent>\r\n        <section className=\"important_data\">\r\n            <div className=\"title_wrap\">\r\n            <div className=\"date_title\">랜덤미션</div>\r\n            </div>\r\n            <DateWrap></DateWrap>\r\n            <DateWrap></DateWrap>\r\n        </section>\r\n        </div>\r\n        <MainFooter></MainFooter>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DateWrap() {\r\n    return(\r\n        <div>\r\n        <div className=\"date_wrap\">\r\n            <div className=\"date_txt\">\r\n                <h5>완벽한 하루 끝내기</h5>\r\n                <p>화이팅 얼마 안남았다</p>\r\n            </div>\r\n            <div className=\"date_btn\">\r\n                 <img src=\"/img/Radio_Button.svg\" alt=\"라디오\"></img>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n  export default Calendar;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './notification.scss'\r\n\r\nfunction Notification(props) {\r\n    return(\r\n        <div className=\"noti_wrap\">\r\n            <div className=\"cover\"></div>\r\n            <aside>\r\n                <div className=\"aside_header\">\r\n                    <p className=\"noti_title\">알림함</p>\r\n                    <img src=\"/img/clear.svg\" onClick={()=>{\r\n                        props.dispatch({type:\"알림닫기\"})\r\n                        props.dispatch({type:\"알림끄기\"})\r\n                    }}></img>\r\n                </div>\r\n                <ul className=\"noti_body\">\r\n                  {\r\n                      props.Time[0].defaultTime.map(function (a,i) {\r\n                          return <li>\r\n                              <img src=\"/img/check_btn.svg\"></img>\r\n                              <div className=\"li_txt_wrap\">\r\n                              <p className=\"li_time\">\r\n                                  {\r\n                                      `${props.Time[0].defaultTime[i].year}-${props.Time[0].defaultTime[i].mon < 10 ?  \"0\" + props.Time[0].defaultTime[i].mon : props.Time[0].defaultTime[i].mon}-${props.Time[0].defaultTime[i].date < 10 ?  \"0\" + props.Time[0].defaultTime[i].date : props.Time[0].defaultTime[i].date}\r\n                                      ${props.Time[0].defaultTime[i].hour < 10 ?  \"0\" + props.Time[0].defaultTime[i].hour : props.Time[0].defaultTime[i].hour}:${props.Time[0].defaultTime[i].min < 10 ?  \"0\" + props.Time[0].defaultTime[i].min : props.Time[0].defaultTime[i].min}:00`\r\n  \r\n                                  }\r\n                              </p>\r\n                              <p className=\"li_title\">\r\n                                  {\r\n                                      props.Text[0].checkText[i]\r\n                                  }\r\n                                  </p>\r\n                              </div>\r\n                              </li>\r\n                      })\r\n                  }\r\n                </ul>\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction redux공장3(state) {\r\n    return {\r\n        state : state.reducer2,\r\n        Time : state.reducer3,\r\n        Text : state.reducer5\r\n    }\r\n  }\r\n  \r\n  export default connect(redux공장3)(Notification);","import React, { useEffect } from 'react';\r\nimport Clock from './clock';\r\nimport Header from './header'\r\nimport MainFooter from './main_footer'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './reset.css';\r\nimport './mypage.scss'\r\n\r\nfunction MyPage(props) {\r\n    let history = useHistory()\r\n    return(\r\n        <div>\r\n            {\r\n            useEffect(()=>{\r\n                const changeTitle = document.querySelector(\"h1 a\")\r\n                const changeNav = document.querySelector(\"nav_btns\")\r\n                changeTitle.innerHTML=\"마이페이지\"\r\n            })\r\n            }\r\n        <div className=\"wrap mypage\">\r\n         <header>\r\n             <Clock></Clock>\r\n            <Header></Header>\r\n         </header>\r\n         <section className=\"section_1\">\r\n             <div className=\"profile_wrap\">\r\n             <h3 className=\"myName\">\r\n             <b>{props.currentUser}</b>님은\r\n             </h3>\r\n             <p className=\"myRank\">\r\n                 완벽주의자이십니다!\r\n             </p>\r\n             <span>MY RANK</span>\r\n             </div>\r\n             <figure className=\"profile_img\">\r\n              <img src=\"/img/profile_man.svg\"></img>\r\n             </figure>\r\n         </section>\r\n         <section className=\"section_2\">\r\n            <ul className=\"tab_menu\">\r\n             <li>패치노트\r\n                 <img src=\"/img/my_arrow.svg\"></img>\r\n                 </li>\r\n             <li>등급표\r\n                <img src=\"/img/my_arrow.svg\"></img>\r\n                </li>\r\n             <li>\r\n                 <Link to=\"/introduce\">개발자인사\r\n                 <img src=\"/img/my_arrow.svg\"></img></Link>\r\n                 </li>\r\n             <li onClick={()=>{\r\n                 localStorage.removeItem(\"currentUser\")\r\n                 history.push('/login')\r\n             }}>닉네임변경\r\n                <img src=\"/img/my_arrow.svg\"></img></li>\r\n            </ul>\r\n         </section>\r\n        </div>\r\n        <MainFooter></MainFooter>\r\n        </div>\r\n    )\r\n}\r\n  \r\n  export default MyPage;","import React, {useState,useEffect} from 'react';\nimport { Link, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport './reset.css';\nimport './loading.scss';\nimport './App.scss';\nimport './editor.scss'\n\nimport Header from './header'\nimport Introduce from './introduce';\nimport AskForm from './login';\nimport Clock from './clock'\nimport Loading from './loading'\nimport Editor from './editor'\nimport Calendar from './calendar';\nimport MainFooter from './main_footer'\nimport Notification from './Notification'\nimport Mypage from './Mypage'\nimport login from './login';\n\nfunction App(props) {\n  let [LoadingState,Loading변경] = useState(false);\n  // 로딩 state\n  const USER_ID = \"currentUser\"\n  let currentUser = localStorage.getItem(USER_ID);\n  // 회원정보 탐색\n  // 시간\n\n  let [plusDay,setplusDay] = useState(1)\n\n  let [parcent,setparcent] = useState(0)\n\n  let [addToggle,setAddToggle] = useState(false)\n\n  let [resets,setresets] = useState(false)\n\n  const loadedTodos = localStorage.getItem(props.reducer[0].saveData)\n  const parsedTodos = JSON.parse(loadedTodos);\n\n  const parcentName = \"parcent\"\n\n  const loadedParcent = +localStorage.getItem(parcentName)\n\n  // 사용한 날 \n  var countDownDate = new Date();\n  countDownDate.setHours(24,0,0,0); // 내일 자정\n\n  var timer = setInterval(function() {\n    // 현재 날짜와 시간\n    var now = new Date().getTime();\n    // 현재 시각과 카운트다운 시각과의 차이\n    var distance = countDownDate - now;\n      \n    // 시간, 분, 초 계산\n    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n    \n    // 카운트 다운 끝나면 0으로 새로운 값 처리\n    if (distance < 0) {\n      clearInterval(timer);\n      setparcent(0)\n      localStorage.removeItem(\"data\")\n      localStorage.removeItem(\"parcent\")\n    }\n  }, 1000);\n\n  return (\n    <div className=\"App\">\n\n      {\n        useEffect(()=>{\n          setTimeout(() => {\n            Loading변경(true)\n            var now = new Date();\n\n            var start = new Date(now.getFullYear(),1,2);\n\n            var diff = (now - start) \n\n            var oneDay = 1000 * 60 * 60 * 24;\n\n            var counter = Math.floor(diff / oneDay);\n            //하루 라는 뜻\n      \n            var countDay = counter- 17\n\n            setplusDay(countDay)\n            //여기에 한번 더 써준 이유는 한번 실행하고 setinterval을 쓸려고\n          }, 3000);\n        },[])\n      }\n\n      {\n        useEffect(()=>{\n          var timer = setInterval(function() {\n            // 현재 날짜와 시간\n            var now = new Date().getTime();\n            // 현재 시각과 카운트다운 시각과의 차이\n            var distance = countDownDate - now;\n              \n            // 시간, 분, 초 계산\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n            // 카운트 다운 끝나면 0으로 새로운 값 처리\n            if (distance === 0) {\n              clearInterval(timer);\n              setparcent(0)\n              localStorage.removeItem(\"data\")\n              localStorage.removeItem(\"parcent\")\n            }\n          }, 1000);\n        },[])\n      }\n\n    {\n      useEffect(()=>{\n        setInterval(() => {\n          var now = new Date();\n\n          var start = new Date(now.getFullYear(),1,2);\n\n          var diff = (now - start) \n\n          var oneDay = 1000 * 60 * 60 * 24;\n\n          var counter = Math.floor(diff / oneDay);\n          //하루 라는 뜻\n    \n          var countDay = counter- 17\n\n          setplusDay(countDay)\n        },36000);\n      },[])\n    }\n\n    {\n      useEffect(()=>{\n        loadedParcent == null\n        ? setparcent(0)\n        : setparcent(loadedParcent)\n      },[])\n    }\n\n\n    <Route exact path=\"/\">\n    {\n       LoadingState === false && props.reducer6[0].update === false\n       ? <Loading></Loading>\n       : currentUser === null\n       ? <AskForm></AskForm>\n       : <div>\n         {/* div을 쓴 이유는 footer가 100프로가 되야하는데 in_wrap 안에 있으면 90퍼의 정보를 상속받아서 그럼 */}\n       <div className=\"wrap\">\n          <header className=\"main_header\">\n            <Clock></Clock>\n            <Link to=\"/Mypage\" className=\"main_nav\"><img src=\"./img/nav.svg\" alt=\"nav\"></img></Link>\n            <Header></Header>\n          </header>\n          <section className=\"section01\">\n            <div className=\"s1_txt_wrap\">\n            <p className=\"today\">오늘 하루</p>\n            <p className=\"parcent\">\n              {\n                  parcent > 100\n                  ? setparcent(100)\n                  : parcent\n              }%</p>\n            <p className=\"caption\">완벽한 하루를 보내셨습니다!</p>\n            </div>\n            {\n              parcent === 0\n              ? <img src=\"/img/ready.svg\" alt=\"준비\"></img>\n              : parcent === 25\n              ? <img src=\"/img/ing.svg\" alt=\"하는중\" className=\"ing\"></img>\n              : parcent === 50\n              ? <img src=\"/img/50.svg\" alt=\"하는중\" className=\"wow\"></img>\n              : parcent === 75\n              ? <img src=\"/img/75.svg\" alt=\"하는중\" className=\"wow\"></img>\n              : parcent === 100 \n              ? <img src=\"/img/wow.svg\" alt=\"하는중\" className=\"wow\"></img>\n              : <img src=\"/img/wow.svg\" alt=\"하는중\" className=\"wow\"></img>\n            }\n            <div className=\"race\">\n              <p className=\"member\">{currentUser}</p>\n              <p className=\"member_caption\">님은 {plusDay}일째 완벽한 하루를 사용중!!</p>\n            </div>\n          </section>\n\n          <section className=\"section02\">\n            <div className=\"in_s2\">\n              <div className=\"schedule\">\n                <p>일정스케줄</p>\n                {\n                 resets === false\n                 ?  <p className=\"reset\" onClick={()=>{\n                  setAddToggle(true)\n                  setresets(true)\n                 }}>작성완료 \n                 <img src=\"/img/plus.svg\" alt=\"더보기\"></img></p>\n                 :  <p className=\"reset\" onClick={()=>{\n                   localStorage.removeItem(\"data\")\n                   setresets(false)\n                   setAddToggle(false)\n                   localStorage.removeItem(\"parcent\")\n                   window.location.reload()\n                 }}>초기화하기</p>\n               }\n              </div>\n              {\n                loadedTodos !== null\n                ? parsedTodos.map(function (a,i) {\n                  return <div className=\"list\" key={i}>\n                        <p className=\"today_date\">{parsedTodos[i].writeH}:{parsedTodos[i].writeM}</p>\n                          <p className=\"today_txt\">{parsedTodos[i].write}</p>\n                      <button id ={i} onClick={()=>{ \n                            var nowTime = new Date();\n\n                            var year = nowTime.getFullYear();\n                            var mon = (nowTime.getMonth()+1);\n                            var date = nowTime.getDate();\n                            var hour = nowTime.getHours();\n                            var min = nowTime.getMinutes();                              \n\n                            let DateFac = {\n                              year : year,\n                              mon : mon,\n                              date : date,\n                              hour : hour,\n                              min : min\n                            }\n                            \n                        parcent >= 100\n                        ? setparcent(parcent)\n                        : setparcent(parcent+25)\n                        localStorage.setItem(parcentName,parcent+25)\n                        props.dispatch({type:\"날짜전송\",payload2: DateFac})\n                        props.dispatch({type:\"알림보기\"})\n                        props.dispatch({type:\"텍스트보내기\",payload3:parsedTodos[i].write})\n\n                        const finded = document.querySelectorAll(\".section02 .list button\")\n                        const todayFind = document.querySelectorAll(\".section02 .list .today_date\")\n                        const todayFind2 = document.querySelectorAll(\".section02 .list .today_txt\")\n                        finded[i].classList.add('off')\n                        todayFind[i].classList.add('op_off')\n                        todayFind2[i].classList.add('op_off')\n                      }}>\n                          <img src=\"/img/before_check.svg\" alt=\"check\"></img>\n                      </button>\n                      </div>\n                })\n                : null\n              }\n            </div>\n          </section>\n          {\n                props.reducer[0].toggle === true\n                ? <Editor></Editor>\n                : null\n              }\n          </div>\n           <MainFooter addToggle={addToggle}></MainFooter>\n           {\n             props.reducer2[0].NotiToggle === true && props.reducer4[0].Nobell === true\n             ? <Notification loadedTodos={loadedTodos} parsedTodos={parsedTodos}></Notification>\n             :  null\n           }\n          </div>\n    }\n    </Route>\n    <Route exact path=\"/introduce\">\n      <Introduce></Introduce>\n      </Route>\n      <Route exact path=\"/login\">\n      <AskForm></AskForm>\n      </Route>\n      <Route exact path=\"/calendar\">\n      <Calendar></Calendar>\n      </Route>\n      <Route exact path=\"/loading\">\n      <Loading></Loading>\n      </Route>\n      <Route exact path=\"/Mypage\">\n      <Mypage currentUser={currentUser}></Mypage>\n      </Route>\n    </div>\n  );\n}\n\nfunction redux메인공장(state) {\n  return{\n    reducer : state.reducer,\n    reducer2 : state.reducer2,\n    reducer3 : state.reducer3,\n    reducer4 : state.reducer4,\n    reducer5 : state.reducer5,\n    reducer6 : state.reducer6\n  }\n}\n\nexport default connect(redux메인공장)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport {Provider} from 'react-redux';\nimport {createStore,combineReducers} from \"redux\"\n\nlet defaults = [{\n  toggle : false,\n  saveData : \"data\",\n  defaultState : []\n}]\n\nlet toggles =[{\n  NotiToggle : false,\n  NavToggle : false,\n  Nobell : false,\n  update : false\n}]\n\nlet checkTime =[{\n  defaultTime : [],\n  checkText :[],\n  dateSave : \"dateSave\",\n  checktxt :\"textSave\"\n}]\n\nlet rank = [{\n  RankPoint : [],\n  RankName : \"rank\"\n}]\n\nfunction reducer(state = defaults, action) {\n  if(action.type === \"에디터열기\"){\n    let copy = [...defaults]\n    copy[0].toggle = true\n    return copy\n  } else if (action.type === \"에디터닫기\") {\n    let copy2 = [...defaults]\n    copy2[0].toggle = false\n    copy2[0].defaultState.push(action.payload)\n    console.log(copy2)\n    localStorage.setItem(copy2[0].saveData,JSON.stringify(copy2[0].defaultState))\n    return copy2\n  } else {\n    return state\n  }\n}\n\nfunction reducer2(state = toggles, action2) {\n  if(action2.type ===\"알림열기\"){\n    let copy3 = [...toggles]\n    copy3[0].NotiToggle = true\n    return copy3\n  } else if (action2.type === \"알림닫기\") {\n    let copy4 = [...toggles]\n    copy4[0].NotiToggle = false\n    return copy4\n  }else{\n    return state\n  }\n}\n\nfunction reducer3(state = checkTime, action3) {\n  if(action3.type === \"날짜전송\"){\n    let copy5 = [...checkTime]\n    copy5[0].defaultTime.push(action3.payload2)\n    return copy5\n  } else {\n    return state\n  }\n}\n\nfunction reducer4(state = toggles, action4) {\n  if(action4.type === \"알림보기\"){\n    let copy6 = [...toggles]\n    copy6[0].Nobell = true\n    return copy6\n  } else if(action4.type===\"알림끄기\") {\n    let copy8 = [...toggles]\n    copy8[0].Nobell = false\n    return copy8\n  }else {\n    return state\n  }\n}\n\nfunction reducer5(state = checkTime, action5) {\n  if(action5.type === \"텍스트보내기\"){\n    let copy7 = [...checkTime]\n    copy7[0].checkText.push(action5.payload3)\n    console.log(copy7)\n    return copy7\n  } else{\n    return state\n  }\n}\n\nfunction reducer6(state = toggles, action6) {\n  if(action6.type === \"로그인성공\"){\n    let copy9 = [...toggles]\n    copy9[0].update = true\n    return copy9\n  } else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({reducer,reducer2,reducer3,reducer4,reducer5,reducer6}))\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}